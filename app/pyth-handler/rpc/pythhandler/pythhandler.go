// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pyth-handler.proto

package pythhandler

import (
	"context"

	"pyth-go/app/pyth-handler/rpc/pb/pythhanlder"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PingRequest  = pythhanlder.PingRequest
	PongResponse = pythhanlder.PongResponse

	PythHandler interface {
		Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error)
	}

	defaultPythHandler struct {
		cli zrpc.Client
	}
)

func NewPythHandler(cli zrpc.Client) PythHandler {
	return &defaultPythHandler{
		cli: cli,
	}
}

func (m *defaultPythHandler) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error) {
	client := pythhanlder.NewPythHandlerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
