version: "3"
services:
  kafka1:
    image: 'bitnami/kafka:3.9.0'
    container_name: pyth-kafka11
    ports:
      - '9192:9092'
      - '9193:9093'
      - '9194:9094'
    environment:
      # enable kraft mode
      - KAFKA_ENABLE_KRAFT=yes
      # set the kraft node id, MUST be unique for each broker
      - KAFKA_CFG_NODE_ID=1
      # role: broker, controller
      # - broker: handle client requests (producer & consumer)
      # - controller: handle controller requests (leader election, partition reassignment)
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      # !!! PLAINTEXT should not be used in production
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Unique kraft cluster id, MUST be the same for all brokers
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
      # List of controller quorum voters
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@pyth-kafka11:9093,2@pyth-kafka22:9093,3@pyth-kafka33:9093

      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9192,EXTERNAL://localhost:9194
      - KAFKA_BROKER_ID=1
    volumes:
      - /Users/jidali/projects/go-pyth/data/kafka1/kafka/kraft:/bitnami/kafka
    networks:
      - pyth_net

  kafka2:
    image: 'bitnami/kafka:3.9.0'
    container_name: pyth-kafka22
    ports:
      - '9292:9092'
      - '9293:9093'
      - '9294:9094'
    environment:
      # enable kraft mode
      - KAFKA_ENABLE_KRAFT=yes
      # set the kraft node id, MUST be unique for each broker
      - KAFKA_CFG_NODE_ID=2
      # role: broker, controller
      # - broker: handle client requests (producer & consumer)
      # - controller: handle controller requests (leader election, partition reassignment)
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      # !!! PLAINTEXT should not be used in production
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Unique kraft cluster id, MUST be the same for all brokers
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
      # List of controller quorum voters
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@pyth-kafka11:9093,2@pyth-kafka22:9093,3@pyth-kafka33:9093

      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9292,EXTERNAL://localhost:9294
      - KAFKA_BROKER_ID=2
    volumes:
      - /Users/jidali/projects/go-pyth/data/kafka2/kafka/kraft:/bitnami/kafka
    networks:
      - pyth_net

  kafka3:
    image: 'bitnami/kafka:3.9.0'
    container_name: pyth-kafka33
    ports:
      - '9392:9092'
      - '9393:9093'
      - '9394:9094'
    environment:
      # enable kraft mode
      - KAFKA_ENABLE_KRAFT=yes
      # set the kraft node id, MUST be unique for each broker
      - KAFKA_CFG_NODE_ID=3
      # role: broker, controller
      # - broker: handle client requests (producer & consumer)
      # - controller: handle controller requests (leader election, partition reassignment)
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      # !!! PLAINTEXT should not be used in production
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Unique kraft cluster id, MUST be the same for all brokers
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
      # List of controller quorum voters
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@pyth-kafka11:9093,2@pyth-kafka22:9093,3@pyth-kafka33:9093

      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9392,EXTERNAL://localhost:9394
      - KAFKA_BROKER_ID=3
    volumes:
      - /Users/jidali/projects/go-pyth/data/kafka3/kafka/kraft:/bitnami/kafka
    networks:
      - pyth_net

  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka-1:
  #   image: bitnami/kafka:latest
  #   container_name: kafka-1
  #   ports:
  #     - "9192:9092"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CLUSTER_ID=bqerrz9ZSpW0dQcXMaCSsQ
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9192
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   volumes:
  #     - /Users/jidali/projects/go-pyth/data/kafka-1/kafka/kraft:/bitnami/kafka
  #   depends_on:
  #     - zookeeper
  # kafka-2:
  #   image: bitnami/kafka:latest
  #   container_name: kafka-2
  #   ports:
  #     - "9292:9092"
  #   environment:
  #     - KAFKA_BROKER_ID=2
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CLUSTER_ID=bqerrz9ZSpW0dQcXMaCSsQ
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9292
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   volumes:
  #     - /Users/jidali/projects/go-pyth/data/kafka-2/kafka/kraft:/bitnami/kafka
  #   depends_on:
  #     - zookeeper
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "pyth-kafka11:9092,pyth-kafka22:9092,pyth-kafka33:9092"
    # volumes:
    #   - /Users/jidali/projects/go-pyth/data/config.yml:/etc/kafkaui/dynamic_config.yaml
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - pyth_net

networks:
  pyth_net:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.20.0.0/16